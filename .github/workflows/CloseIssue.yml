name: Submit Review

on:
  issues:
    types: ["closed"]

jobs:
  assign_and_move_card:
    name: Assign issue to PR author and move Kanban card
    runs-on: ubuntu-latest
    # Single quotes must be used here https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#literals
    # PRs from forks don't have required token authorization
    if: |
        github.event.pull_request.head.repo.full_name == github.repository
        && (github.event.review.state == 'approved' || github.event.review.state == 'changes_requested')

    steps:
      # https://github.com/actions/github-script
      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const TODO_COLUMN = 11144556;
            const IN_PROGRESS_COLUMN = 11144557;
            const REVIEW_IN_PROGRESS_COLUMN = 11144558;
            const REVIEW_APPROVED_COLUMN = 11144559;
            const VALIDATE_PEACH_COLUMN = 12684699;
            const DONE_COLUMN = 11144560;
            //
            async function findCard(content_url) {
                // Columns are searched from the most probable one
                const allColumns = [REVIEW_IN_PROGRESS_COLUMN, REVIEW_APPROVED_COLUMN, IN_PROGRESS_COLUMN, TODO_COLUMN, VALIDATE_PEACH_COLUMN, DONE_COLUMN];
                for (let i = 0; i < allColumns.length; i++) {
                    let cards = await github.projects.listCards({ column_id: allColumns[i] });
                    let card = cards.data.find(x => x.content_url == content_url);
                    if (card) {
                        return card;
                    }
                }
                console.log("Card not found for: " + content_url);
                return null;
            }
            //
            async function processIssue(issue, anyRequestChanges) {
                const card = await findCard(issue.url);
                const newColumn = VALIDATE_PEACH_COLUMN;
                if (card && card.column_id != newColumn) {
                    console.log("Moving card to " + newColumn);
                    github.projects.moveCard({ card_id: card.id, position: "bottom", column_id: newColumn });
                }
            }
            //
            processIssue(context.payload.issue);
            console.log("Done");
