# This is a basic workflow to help you get started with Actions

name: Kanban Start Progress

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  project_card:
    types: ["moved"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
  # This workflow contains a single job called "assign_self"
#  assign_self:
    # The type of runner that the job will run on
#    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!
#jobs:
#  hello_world_job:
#    runs-on: ubuntu-latest
#    name: A job to say hello
#    if: github.event.project_card.content_url != null # It's an Issue (or a PR). It's not a Note.
#
#    steps:
#
    #Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    #Can't find 'action.yml', 'action.yaml' or 'Dockerfile' under '/home/runner/work/_actions/pavel-mikula-sonarsource/GitHubActionPlayground/v0.3'. Did you forget to run actions/checkout before running your local action?
    # To use this repository's private action,
    # you must check out the repository
#    - name: Checkout local repo
#      uses: actions/checkout@v2

#    - name: Assign card
#      uses: ./ # Uses an action in the root directory
#      id: assign
#      with:
#        token: ${{ secrets.GITHUB_TOKEN }}
#        #issue_number: ${{ github.event.}}
#        assignee_login: ${{ github.event.sender.login }}
jobs:
    assign_to_self:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/github-script@v3
            with:
                github-token: ${{secrets.GITHUB_TOKEN}}
                script: |
                    var issue = await github.request(context.payload.project_card.content_url);
                    console.log(`issue ${issue}`);
                    console.log(`issue.number ${issue.number}`);
                    github.issues.addAssignees({ owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number, assignees: [context.payload.sender.login] });
                    console.log(`The event payload: ${JSON.stringify(context.payload, undefined, 2)}`);


